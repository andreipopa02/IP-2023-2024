[
write  "\n"
write $Indent

'DocComment
call DocComment( $Operation )

$Name = $Operation.name
$OwnerKind = $Operation.owner.kind
$Modifiers = ""
$AccessModifiers = ""

foreach $Stereotype in $Operation.appliedStereotype
	switch( $Stereotype.name )
		case "internal":	$AccessModifiers = "internal "
		case "unsafe": 	$Modifiers = $Modifiers & "unsafe "
		case "new": 	$Modifiers = $Modifiers & "new "
		case "virtual": 	$Modifiers = $Modifiers & "virtual "
		case "override": 	$Modifiers = $Modifiers & "override "
		case "extern": 	$Modifiers = $Modifiers & "extern "
		
		case "attributes": call AttributeSections( $Stereotype )
	endswitch		
next

'Modifier
if $Operation.isPackage						: $AccessModifiers = "internal "				: endif
if $Operation.isPublic and $OwnerKind <> "Interface"	: $AccessModifiers = "public " 				: endif
if $Operation.isProtected					: $AccessModifiers = "protected " & $AccessModifiers	: endif
if $Operation.isPrivate						: $AccessModifiers = "private " 				: endif

if not $Operation.implementedInterface.Valid
	write $AccessModifiers
endif

write $Modifiers

if $Operation.isStatic 		: write "static " 		: endif
if $Operation.isAbstract 	: write "abstract " 	: endif
if $Operation.isLeaf		: write "sealed " 		: endif

'Template signature
if $Operation.isTemplate
	call TemplateSignature( $Operation.ownedTemplateSignature )
	write " "
endif

'Return Type
call ReturnParameter( $Operation.ownedReturnParameter )
write " "			

'Implemented Interface
if $Operation.implementedInterface.Valid
	call Type( $Operation.implementedInterface )
	write "."			
endif

'Name
write $Name

write "["

'Parameter
call ParameterList( $Operation )

write "]"
write "\n"
write $Indent & "{"

$SaveIndent = $Indent
$Indent = $Indent & $IndentStep
$IsGetSetAccessorSet = false

'Accessor
foreach $Stereotype in $Operation.appliedStereotype
	if $Stereotype.name = "GetAccessor" or $Stereotype.name = "SetAccessor" 
		call Accessor( $Stereotype )
		$IsGetSetAccessorSet=true
	endif
next

$Indent = $SaveIndent
write "\n" & $Indent & "}"
]