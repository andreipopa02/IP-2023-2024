[
'UML_element -> $Class
$XML_element = $NamespacePrefix & "complexType"

write $Indent & "<" & $XML_element

' XML attributes
$Name = $Class.name

$XML_attributes = ""
$XML_attributes_content = ""

foreach $Stereotype in $Class.appliedStereotype
	switch( $Stereotype.name )
		case "complexType":
			foreach $TaggedValue in $Stereotype.taggedValue
				$ValueName = $TaggedValue.name
				$Prefix = " " & $ValueName & "=" & "\""
				$Postfix = ""
				foreach $SingleValue in $TaggedValue.values
					$Value = $SingleValue.value
					if( $Value <> "" )
						$XML_attributes = $XML_attributes & $Prefix & $Value					
						$Prefix = " "
						$Postfix =  "\""
					endif
				next
				$XML_attributes = $XML_attributes & $Postfix
			next	
		case "complexContent":
			foreach $TaggedValue in $Stereotype.taggedValue
				$ValueName = $TaggedValue.name
				$Value = $TaggedValue.value
				
				if( $Value <> "" )
					$XML_attributes_content = $XML_attributes_content & " " & $ValueName & "=" & "\"" & $Value & "\""
				endif
			next	
		case "global":
			if( $Name <> "" )
				$XML_attributes = " name=" & "\"" & $Name & "\"" & $XML_attributes
			endif
	endswitch		
next

write $XML_attributes

if $Class.isAbstract : write " abstract=\"true\"" 	: endif

' end of XML attributes
write ">\n"

' content
$IndentSave = $Indent
$Indent = $Indent & $IndentStep

call Annotation( $Class )

$HasBaseType = false

foreach $Generalization in $Class.generalization
	if( $HasBaseType = false )
		foreach $Stereotype in $Generalization.appliedStereotype
			switch( $Stereotype.name )
				case "restriction":
				case "extension":
					$HasBaseType = true
			endswitch		
		next
	endif
next

if( $HasBaseType )
	$XML_element_content = $NamespacePrefix & "complexContent"
	
	$IndentContentSave = $Indent
	write $Indent & "<" & $XML_element_content & $XML_attributes_content & ">\n"
	
	$Indent = $Indent & $IndentStep

	call ComplexType_Base( $Class )
	
	$Indent = $IndentContentSave
	write $Indent & "</" & $XML_element_content & ">\n"
else
	foreach $Property in $Class.ownedAttribute
		$IsDone = false
		foreach $Stereotype_Property in $Property.appliedStereotype
			if( $IsDone = false )
				switch( $Stereotype_Property.name )
					case "group":		
						call Group( $Property )
						$IsDone = true
					case "attributeGroup":	
						call AttributeGroup( $Property )
						$IsDone = true
					case "attribute":		
						call Attribute( $Property )
						$IsDone = true
					case "anyAttribute":	
						call AnyAttribute( $Property )
						$IsDone = true
				endswitch
			endif
		next
		
		if( $IsDone = false )
			$Type = $Property.type
			if( $Type.Valid)
				foreach $Stereotype_Type in $Type.appliedStereotype
					if( $IsDone = false )
						switch ($Stereotype_Type.name)
							case "sequence":	
								call Sequence( $Type, $Property )
								$IsDone = true
							case "choice":	
								call Choice( $Type, $Property )
								$IsDone = true
							case "all": 		
								call All( $Type, $Property )
								$IsDone = true
						endswitch
					endif
				next
			endif
		endif
	next
endif

' end of content
$Indent = $IndentSave

write $Indent & "</" & $XML_element & ">\n"
]